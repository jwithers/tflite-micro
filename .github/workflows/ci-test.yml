name: CI Tests
on:
  pull_request_target:
    types: [labeled]
    
jobs:
  trivial:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'ci:test')
    name: CI Machinery Tests
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: show selected vars
        run: |
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"
          echo "GITHUB_HEAD_REF:  $GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF:  $GITHUB_BASE_REF"
          echo "GITHUB_REF:  $GITHUB_REF"
          echo "GITHUB_REPOSITORY:  $GITHUB_REPOSITORY"
          echo "GITHUB_SHA:  $GITHUB_SHA"
          echo ${{ github.event.number }}
      - name: remove ci test tag
        uses: actions/github-script@a3e7071a34d7e1f219a8a4de9a5e0a34d1ee1293
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'ci:run'
            })
            github.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'ci:test'
            })
        continue-on-error: true
        - name: code stye checks
          run: |
            echo deb http://apt.llvm.org/buster/ llvm-toolchain-buster-12 main > /etc/apt/sources.list.d/llvm.list
            wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -

            apt-get update

            apt-get install -y zip xxd sudo

            apt-get install -y clang-12 clang-format-12
            # Set clang-12 and clang-format-12 as the default to ensure that the pigweed
            # formatting scripts use the desired version.
            ln -s /usr/bin/clang-12 /usr/bin/clang
            ln -s /usr/bin/clang++-12 /usr/bin/clang++
            ln -s /usr/bin/clang-format-12 /usr/bin/clang-format

            pip install six
            # Install Renode test dependencies
            pip install pyyaml requests psutil robotframework==3.1

            /bin/sh -c "/opt/tflm/tensorflow/lite/micro/tools/ci_build/test_code_style.sh"
#      - name: create json file
#        run: |
#          python3 .github/assets/write_json.py -f ./.tests/test.json
#      - name: commit ci info file
#        run: |
#          git config --local user.email "$(git log --format='%ae' HEAD^!)"
#          git config --local user.name "$(git log --format='%an' HEAD^!)"
#          git remote add github "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
#          git pull github ${GITHUB_REF}
#          git add .
#          git commit -m "adding ci data"
#          git push --force github HEAD:${GITHUB_HEAD_REF}

